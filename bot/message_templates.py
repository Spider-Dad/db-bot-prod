import logging
from config import PHONE_PAY, NAME_PAY
import re
from typing import List, Dict, Tuple

logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.ERROR) # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–æ–∫

from datetime import datetime, timedelta
import re
from typing import List, Dict

def format_birthday_reminder(template: str, first_name: str, last_name: str, 
                           birth_date: str, days_before: int) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –æ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π HTML"""
    try:
        name = f"{first_name} {last_name}".strip()
        birth_date_obj = datetime.strptime(birth_date, "%Y-%m-%d")

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –≥–æ–¥—É
        current_year = datetime.now().year
        birthday_this_year = birth_date_obj.replace(year=current_year)

        # –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–µ–≤ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ
        MONTHS_RU = {
            1: "—è–Ω–≤–∞—Ä—è", 2: "—Ñ–µ–≤—Ä–∞–ª—è", 3: "–º–∞—Ä—Ç–∞", 4: "–∞–ø—Ä–µ–ª—è",
            5: "–º–∞—è", 6: "–∏—é–Ω—è", 7: "–∏—é–ª—è", 8: "–∞–≤–≥—É—Å—Ç–∞",
            9: "—Å–µ–Ω—Ç—è–±—Ä—è", 10: "–æ–∫—Ç—è–±—Ä—è", 11: "–Ω–æ—è–±—Ä—è", 12: "–¥–µ–∫–∞–±—Ä—è"
        }

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã —Å —Ä—É—Å—Å–∫–∏–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –º–µ—Å—è—Ü–µ–≤
        date = f"{birthday_this_year.day:02d} {MONTHS_RU[birthday_this_year.month]}"
        date_before = f"{(birthday_this_year - timedelta(days=1)).day:02d} {MONTHS_RU[(birthday_this_year - timedelta(days=1)).month]}"

        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        template_vars = {
            "name": name,
            "first_name": first_name,
            "last_name": last_name,
            "date": date,
            "date_before": date_before,
            "days_until": str(days_before),
            "phone_pay": PHONE_PAY,  # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é phone_pay
            "name_pay": NAME_PAY     # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é name_pay
        }

        # –õ–æ–≥–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        logger.info(f"Template variables: {template_vars}")

        # –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ —à–∞–±–ª–æ–Ω–µ
        result = template
        for var_name, var_value in template_vars.items():
            var_placeholder = "{" + var_name + "}"
            if var_placeholder in template:
                result = result.replace(var_placeholder, var_value)

        return result
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –¥–Ω–µ —Å–æ–±—ã—Ç–∏—è: {str(e)}")
        return template  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —à–∞–±–ª–æ–Ω –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏

def get_welcome_message(is_admin: bool = False, is_authorized: bool = False) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""

    # –î–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not is_authorized:
        return f"""–£–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–±—è –≤ —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–æ–±—ã—Ç–∏—è—Ö –Ω–∞—à–µ–π —Å–ª—É–∂–±—ã. –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ...üïí
        
        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏ @username, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ–≥–æ –Ω–µ—Ç. –≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –≤—Å–µ —Ä–∞–±–æ—Ç–∞–ª–æ –∏—Å–ø—Ä–∞–≤–Ω–æü§ñ"""

    # –ë–∞–∑–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –≤—Å–µ—Ö –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    base_message = """<b>–ü—Ä–∏–≤–µ—Ç!</b> üëã
–Ø –±–æ—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–æ–±—ã—Ç–∏—è—Ö –Ω–∞—à–µ–π —Å–ª—É–∂–±—ã"""

    # –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if is_admin:
        return f"""{base_message}

ü¶∏‚Äç‚ôÇÔ∏è‚ú® –¢—ã —è–≤–ª—è–µ—à—å—Å—è <b>–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>.
–î–ª—è —Ç–µ–±—è –¥–æ—Å—Ç—É–ø–µ–Ω <b>–ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª</b> –±–æ—Ç–∞."""

    # –î–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    return f"""{base_message}
ü¶∏‚Äç‚ôÇÔ∏è –¢—ã —è–≤–ª—è–µ—à—å—Å—è <b>–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞</b>.

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
‚Ä¢ /birthdays - –°–ø–∏—Å–æ–∫ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π"""

def get_birthday_list_message(birthdays: list) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è"""
    if not birthdays:
        return "–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è."

    # –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–µ–≤ –≤ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–º –∏ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–∞—Ö
    MONTHS_RU = {
        1: {"nom": "–Ø–Ω–≤–∞—Ä—å", "gen": "—è–Ω–≤–∞—Ä—è"},
        2: {"nom": "–§–µ–≤—Ä–∞–ª—å", "gen": "—Ñ–µ–≤—Ä–∞–ª—è"},
        3: {"nom": "–ú–∞—Ä—Ç", "gen": "–º–∞—Ä—Ç–∞"},
        4: {"nom": "–ê–ø—Ä–µ–ª—å", "gen": "–∞–ø—Ä–µ–ª—è"},
        5: {"nom": "–ú–∞–π", "gen": "–º–∞—è"},
        6: {"nom": "–ò—é–Ω—å", "gen": "–∏—é–Ω—è"},
        7: {"nom": "–ò—é–ª—å", "gen": "–∏—é–ª—è"},
        8: {"nom": "–ê–≤–≥—É—Å—Ç", "gen": "–∞–≤–≥—É—Å—Ç–∞"},
        9: {"nom": "–°–µ–Ω—Ç—è–±—Ä—å", "gen": "—Å–µ–Ω—Ç—è–±—Ä—è"},
        10: {"nom": "–û–∫—Ç—è–±—Ä—å", "gen": "–æ–∫—Ç—è–±—Ä—è"},
        11: {"nom": "–ù–æ—è–±—Ä—å", "gen": "–Ω–æ—è–±—Ä—è"},
        12: {"nom": "–î–µ–∫–∞–±—Ä—å", "gen": "–¥–µ–∫–∞–±—Ä—è"}
    }

    message = "üìÖ –°–ø–∏—Å–æ–∫ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–∞ —Ç–µ–∫—É—â–∏–π –≥–æ–¥:\n\n"
    current_month = None

    for birthday in birthdays:
        birth_date = datetime.strptime(birthday['birth_date'], "%Y-%m-%d")
        month_num = birth_date.month

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É —Å —Ä—É—Å—Å–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –º–µ—Å—è—Ü–∞ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ
        date = f"{birth_date.day:02d} {MONTHS_RU[month_num]['gen']}"

        if month_num != current_month:
            if current_month is not None:  # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –º–µ–∂–¥—É –º–µ—Å—è—Ü–∞–º–∏
                message += "\n"
            current_month = month_num
            message += f"üóì {MONTHS_RU[month_num]['nom']}:\n"

        name = f"{birthday['first_name']}"
        if birthday['last_name']:
            name += f" {birthday['last_name']}"
        message += f"   üéÇ {name} - {date}\n"

    return message

def get_new_user_notification(first_name: str) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    return f"""‚ú® <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!</b>

    –¢—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ —Å–æ–±—ã—Ç–∏—è—Ö –Ω–∞—à–µ–π —Å–ª—É–∂–±—ã.

    –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
    ‚Ä¢ /start - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
    ‚Ä¢ /birthdays - –°–ø–∏—Å–æ–∫ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π –∫–æ–ª–ª–µ–≥

    –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è! üéâ"""

def get_new_user_request_notification(user_info: dict) -> str:
        """–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
        username = f"@{user_info.get('username', '‚ùóÔ∏èusername –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')}"
        name = f"{user_info['first_name']}"
        if user_info.get('last_name', ''):
            name += f" {user_info.get('last_name', '')}"
        return f"""üÜï <b>–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ—Å—Ç—É–ø!</b>

    üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {name}
    üîç <b>Username:</b> {username}
    üÜî <b>Telegram ID:</b> {user_info['telegram_id']}

    –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É:
    <code>/add_user {username} {user_info['first_name']} {user_info['last_name']} YYYY-MM-DD</code>
    –ó–∞–º–µ–Ω–∏ YYYY-MM-DD –Ω–∞ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≥–æ–¥-–º–µ—Å—è—Ü-–¥–µ–Ω—å."""

def validate_template_html(template: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ HTML-—Ç–µ–≥–æ–≤ —à–∞–±–ª–æ–Ω–∞"""
    allowed_tags = [
        'b', 'strong', 'i', 'em', 'u', 'ins', 's', 'strike', 'del',
        'span', 'tg-spoiler', 'a', 'code', 'pre', 'blockquote',
        'tg-emoji'
    ]
    tag_pattern = re.compile(r'</?([a-z-]+)(?:\s+[^>]*)?>')

    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ HTML-—Ç–µ–≥–∏ –≤ —à–∞–±–ª–æ–Ω–µ
    tags = tag_pattern.findall(template)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ç–µ–≥–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã
    return all(tag.lower() in allowed_tags for tag in tags)

def validate_template_variables(template: str) -> Tuple[bool, List[str]]:
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —à–∞–±–ª–æ–Ω–µ.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂ (is_valid, invalid_vars).
    """
    allowed_vars = [
        "{name}", "{first_name}", "{last_name}", "{date}",
        "{date_before}", "{days_until}", "{phone_pay}", "{name_pay}"
    ]

    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —à–∞–±–ª–æ–Ω–µ {variable}
    var_pattern = re.compile(r'\{([^}]+)\}')
    found_vars = var_pattern.findall(template)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    invalid_vars = []
    for var in found_vars:
        if "{" + var + "}" not in allowed_vars:
            invalid_vars.append(var)

    return (len(invalid_vars) == 0, invalid_vars)


def get_template_help() -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∫–∏ –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é —à–∞–±–ª–æ–Ω–æ–≤"""
    return """<b>üìù –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</b>
    
<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:</b>
‚Ä¢ {name} - –ü–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ò–º—è + –§–∞–º–∏–ª–∏—è)
‚Ä¢ {first_name} - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ {last_name} - –§–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ {date} - –î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–î–î –º–µ—Å—è—Ü–∞"
‚Ä¢ {date_before} - –î–∞—Ç–∞ –∑–∞ –¥–µ–Ω—å –¥–æ —Å–æ–±—ã—Ç–∏—è
‚Ä¢ {days_until} - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ —Å–æ–±—ã—Ç–∏—è
‚Ä¢ {phone_pay} - –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –ø–æ –°–ë–ü (–¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–±—Ä–∞—â–∞–π—Å—è –∫ @spiderdad)
‚Ä¢ {name_pay} - –ü–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –ø–æ –°–ü–ë (–¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–±—Ä–∞—â–∞–π—Å—è –∫ @spiderdad)
    
<b>HTML-—Ç–µ–≥–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</b>
‚Ä¢ &lt;b&gt;—Ç–µ–∫—Å—Ç&lt;/b&gt; –∏–ª–∏ &lt;strong&gt;—Ç–µ–∫—Å—Ç&lt;/strong&gt; - <b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>
‚Ä¢ &lt;i&gt;—Ç–µ–∫—Å—Ç&lt;/i&gt; –∏–ª–∏ &lt;em&gt;—Ç–µ–∫—Å—Ç&lt;/em&gt; - <i>–ö—É—Ä—Å–∏–≤</i>
‚Ä¢ &lt;u&gt;—Ç–µ–∫—Å—Ç&lt;/u&gt; –∏–ª–∏ &lt;ins&gt;—Ç–µ–∫—Å—Ç&lt;/ins&gt; - <u>–ü–æ–¥—á—ë—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç</u>
‚Ä¢ &lt;s&gt;—Ç–µ–∫—Å—Ç&lt;/s&gt; –∏–ª–∏ &lt;strike&gt;—Ç–µ–∫—Å—Ç&lt;/strike&gt; - <s>–ó–∞—á—ë—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç</s>
‚Ä¢ &lt;code&gt;—Ç–µ–∫—Å—Ç&lt;/code&gt; - <code>–ú–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç</code>
‚Ä¢ &lt;pre&gt;—Ç–µ–∫—Å—Ç&lt;/pre&gt; - –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
‚Ä¢ &lt;tg-spoiler&gt;—Ç–µ–∫—Å—Ç&lt;/tg-spoiler&gt; - –°–ø–æ–π–ª–µ—Ä
‚Ä¢ &lt;blockquote&gt;—Ç–µ–∫—Å—Ç&lt;/blockquote&gt; - –¶–∏—Ç–∞—Ç–∞
    
<b>–ü—Ä–∏–º–µ—Ä—ã —à–∞–±–ª–æ–Ω–æ–≤:</b>
1. –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å —Å —ç–º–æ–¥–∑–∏:
<pre>–ö–æ–ª–ª–µ–≥–∞, –ø—Ä–∏–≤–µ—Ç! üéâ\n
üìÖ <b>{name}</b> <b>{date}</b> –ø—Ä–∞–∑–¥–Ω—É–µ—Ç –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è! üéÇ\n
–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –ø–æ–∑–¥—Ä–∞–≤–∏—Ç–µ–ª—å–Ω–æ–º –∫–æ–Ω–≤–µ—Ä—Ç–µ, –ø—Ä–æ—à—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤–∑–Ω–æ—Å –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ <code>{phone_pay}</code> –Ω–∞ <b>–ê–ª—å—Ñ—É</b> –∏–ª–∏ <b>–¢–∏–Ω—å–∫–æ—Ñ—Ñ</b> –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è <b>{date_before}</b>. –ü–æ–ª—É—á–∞—Ç–µ–ª—å: <i>{name_pay}</i>.\n
‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, <b>–Ω–µ –ø–µ—Ä–µ–≤–æ–¥–∏ –¥–µ–Ω—å–≥–∏ –≤ –¥—Ä—É–≥–∏–µ –±–∞–Ω–∫–∏</b>, –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã.\n
–í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–∞ —É–∫–∞–∂–∏: <code>–î–† {first_name}</code>.\n
–°–ø–∞—Å–∏–±–æ! üôå</pre>
    
2. –ü—Ä–æ—Å—Ç–æ–π —Å—Ç–∏–ª—å:
<pre>üéÇ <b>{date}</b> –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É <b>{name}</b>!</pre>
    
3. –° –∑–∞–ø—Ä–æ—Å–æ–º –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥:
<pre>üí≥ –°–±–æ—Ä –Ω–∞ –ø–æ–¥–∞—Ä–æ–∫\n
–ù–æ–º–µ—Ä: <code>{phone_pay}</code>\n
–ü–æ–ª—É—á–∞—Ç–µ–ª—å: <i>{name_pay}</i>\n
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <code>–î–† {first_name}</code></pre>
    
<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTML-—Ç–µ–≥–∏ –∏ —ç–º–æ–¥–∑–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞—à–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!"""

def preview_template_message(template: str, previews: List[tuple]) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏ emoji"""
    response = "üìù <b>–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —à–∞–±–ª–æ–Ω–∞</b>\n\n"
    response += "üìã <i>–ò—Å—Ö–æ–¥–Ω—ã–π —à–∞–±–ª–æ–Ω:</i>\n"
    response += f"<code>{template}</code>\n\n"
    response += "üîç <b>–ü—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π:</b>\n\n"

    emojis = {
        "today": "üìÖ",
        "tomorrow": "‚è∞",
        "3days": "üìÜ",
        "week": "üìä"
    }

    for preview_type, label, message in previews:
        emoji = emojis.get(preview_type, "üîî")
        response += f"{emoji} <u>{label}:</u>\n{message}\n\n"

    response += "üí° <i>–ï—Å–ª–∏ —à–∞–±–ª–æ–Ω –≤—ã–≥–ª—è–¥–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /set_template –¥–ª—è –µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.</i>"
    return response